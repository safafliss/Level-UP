{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\safso\\\\Desktop\\\\ProjetFullStack\\\\material-dashboard-pro-angular-v2.7.0\\\\material-dashboard-pro-angular-v2.7.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\safso\\\\Desktop\\\\ProjetFullStack\\\\material-dashboard-pro-angular-v2.7.0\\\\material-dashboard-pro-angular-v2.7.0\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component, Renderer2, ViewChild, ElementRef } from '@angular/core';\nimport { ROUTES } from '../.././sidebar/sidebar.component';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { Location } from '@angular/common';\nvar misc = {\n  navbar_menu_visible: 0,\n  active_collapse: true,\n  disabled_collapse_init: 0\n};\n\nvar NavbarComponent = /*#__PURE__*/function () {\n  function NavbarComponent(location, renderer, element, router) {\n    _classCallCheck(this, NavbarComponent);\n\n    this.renderer = renderer;\n    this.element = element;\n    this.router = router;\n    this.mobile_menu_visible = 0;\n    this.location = location;\n    this.nativeElement = element.nativeElement;\n    this.sidebarVisible = false;\n  }\n\n  _createClass(NavbarComponent, [{\n    key: \"minimizeSidebar\",\n    value: function minimizeSidebar() {\n      var body = document.getElementsByTagName('body')[0];\n\n      if (misc.sidebar_mini_active === true) {\n        body.classList.remove('sidebar-mini');\n        misc.sidebar_mini_active = false;\n      } else {\n        setTimeout(function () {\n          body.classList.add('sidebar-mini');\n          misc.sidebar_mini_active = true;\n        }, 300);\n      } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n      var simulateWindowResize = setInterval(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n      setTimeout(function () {\n        clearInterval(simulateWindowResize);\n      }, 1000);\n    }\n  }, {\n    key: \"hideSidebar\",\n    value: function hideSidebar() {\n      var body = document.getElementsByTagName('body')[0];\n      var sidebar = document.getElementsByClassName('sidebar')[0];\n\n      if (misc.hide_sidebar_active === true) {\n        setTimeout(function () {\n          body.classList.remove('hide-sidebar');\n          misc.hide_sidebar_active = false;\n        }, 300);\n        setTimeout(function () {\n          sidebar.classList.remove('animation');\n        }, 600);\n        sidebar.classList.add('animation');\n      } else {\n        setTimeout(function () {\n          body.classList.add('hide-sidebar'); // $('.sidebar').addClass('animation');\n\n          misc.hide_sidebar_active = true;\n        }, 300);\n      } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n      var simulateWindowResize = setInterval(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n      setTimeout(function () {\n        clearInterval(simulateWindowResize);\n      }, 1000);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.listTitles = ROUTES.filter(function (listTitle) {\n        return listTitle;\n      });\n      var navbar = this.element.nativeElement;\n      var body = document.getElementsByTagName('body')[0];\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\n\n      if (body.classList.contains('sidebar-mini')) {\n        misc.sidebar_mini_active = true;\n      }\n\n      if (body.classList.contains('hide-sidebar')) {\n        misc.hide_sidebar_active = true;\n      }\n\n      this._router = this.router.events.pipe(filter(function (event) {\n        return event instanceof NavigationEnd;\n      })).subscribe(function (event) {\n        _this.sidebarClose();\n\n        var $layer = document.getElementsByClassName('close-layer')[0];\n\n        if ($layer) {\n          $layer.remove();\n        }\n      });\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      if ($(window).width() > 991) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"sidebarOpen\",\n    value: function sidebarOpen() {\n      var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n      var toggleButton = this.toggleButton;\n      var body = document.getElementsByTagName('body')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      body.classList.add('nav-open');\n      setTimeout(function () {\n        $toggle.classList.add('toggled');\n      }, 430);\n      var $layer = document.createElement('div');\n      $layer.setAttribute('class', 'close-layer');\n\n      if (body.querySelectorAll('.main-panel')) {\n        document.getElementsByClassName('main-panel')[0].appendChild($layer);\n      } else if (body.classList.contains('off-canvas-sidebar')) {\n        document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\n      }\n\n      setTimeout(function () {\n        $layer.classList.add('visible');\n      }, 100);\n\n      $layer.onclick = function () {\n        body.classList.remove('nav-open');\n        this.mobile_menu_visible = 0;\n        this.sidebarVisible = false;\n        $layer.classList.remove('visible');\n        setTimeout(function () {\n          $layer.remove();\n          $toggle.classList.remove('toggled');\n        }, 400);\n      }.bind(this);\n\n      body.classList.add('nav-open');\n      this.mobile_menu_visible = 1;\n      this.sidebarVisible = true;\n    }\n  }, {\n    key: \"sidebarClose\",\n    value: function sidebarClose() {\n      var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n      var body = document.getElementsByTagName('body')[0];\n      this.toggleButton.classList.remove('toggled');\n      var $layer = document.createElement('div');\n      $layer.setAttribute('class', 'close-layer');\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open'); // $('html').removeClass('nav-open');\n\n      body.classList.remove('nav-open');\n\n      if ($layer) {\n        $layer.remove();\n      }\n\n      setTimeout(function () {\n        $toggle.classList.remove('toggled');\n      }, 400);\n      this.mobile_menu_visible = 0;\n    }\n  }, {\n    key: \"sidebarToggle\",\n    value: function sidebarToggle() {\n      if (this.sidebarVisible === false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n\n      if (titlee.charAt(0) === '#') {\n        titlee = titlee.slice(1);\n      }\n\n      for (var i = 0; i < this.listTitles.length; i++) {\n        if (this.listTitles[i].type === \"link\" && this.listTitles[i].path === titlee) {\n          return this.listTitles[i].title;\n        } else if (this.listTitles[i].type === \"sub\") {\n          for (var j = 0; j < this.listTitles[i].children.length; j++) {\n            var subtitle = this.listTitles[i].path + '/' + this.listTitles[i].children[j].path; // console.log(subtitle)\n            // console.log(titlee)\n\n            if (subtitle === titlee) {\n              return this.listTitles[i].children[j].title;\n            }\n          }\n        }\n      }\n\n      return 'Dashboard';\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return this.location.prepareExternalUrl(this.location.path());\n    }\n  }]);\n\n  return NavbarComponent;\n}();\n\n__decorate([ViewChild('app-navbar-cmp', {\n  static: false\n}), __metadata(\"design:type\", Object)], NavbarComponent.prototype, \"button\", void 0);\n\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar-cmp',\n  templateUrl: 'navbar.component.html'\n}), __metadata(\"design:paramtypes\", [Location, Renderer2, ElementRef, typeof (_a = typeof Router !== \"undefined\" && Router) === \"function\" ? _a : Object])], NavbarComponent);\nexport { NavbarComponent };","map":null,"metadata":{},"sourceType":"module"}